<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Embedded Systems Design</title>
    <link>https://embedded-systems-design.github.io/tags/tutorial/</link>
    <description>Recent content in Tutorial on Embedded Systems Design</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://embedded-systems-design.github.io/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started with Cadence</title>
      <link>https://embedded-systems-design.github.io/getting-started-with-cadence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/getting-started-with-cadence/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;A number of &lt;a href=&#34;https://www.youtube.com/watch?v=QyfyskwCqGA&amp;amp;list=PLL5qFpazhNPkiMll-tzyYYOK3y9xvoLk6&#34;&gt;basic Cadence tutorial videos&lt;/a&gt; are available on YouTube.&lt;/p&gt;</description>
    </item>
    <item>
      <title>All About Serial</title>
      <link>https://embedded-systems-design.github.io/all-about-serial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/all-about-serial/</guid>
      <description>&lt;h2 id=&#34;what-are-serial-protocols&#34;&gt;What are serial protocols?&lt;/h2&gt;&#xA;&lt;p&gt;I2C, SPI, and UART are three of the most common protocols for serial data transmission. An overview of these protocols can be found here:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a custom library in Cadence</title>
      <link>https://embedded-systems-design.github.io/creating-a-custom-library-in-cadence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/creating-a-custom-library-in-cadence/</guid>
      <description>&lt;p&gt;In order to use schematic symbols imported from the web or custom created for your project (very common), you must create a custom symbol library in which to save them. It is good practice to create a custom library for each project that you work on to save your schematic symbols. To create a custom library, do the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exporting Gerber files from Cadence PCB Editor</title>
      <link>https://embedded-systems-design.github.io/exporting-gerber-files-from-cadence-pcb-editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/exporting-gerber-files-from-cadence-pcb-editor/</guid>
      <description>&lt;h2 id=&#34;what-is-a-gerber-file&#34;&gt;What is a Gerber file?&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/Gerber_format&#34;&gt;Gerber file&lt;/a&gt; (also known as &lt;em&gt;artwork&lt;/em&gt;) is a 2-D graphical representation of a single layer of a PCB. A typical design will have individual Gerber files for each layer (e.g., top copper, bottom copper, top silkscreen, bottom silkscreen, top soldermask, bottom soldermask) of a PCB.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to export a PDF from Capture and PCB Editor</title>
      <link>https://embedded-systems-design.github.io/how-to-export-a-pdf-from-capture-and-pcb-editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/how-to-export-a-pdf-from-capture-and-pcb-editor/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial goes through how to save CIS schematics and PCB layers as a PDF.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Particle Argon Wifi Board</title>
      <link>https://embedded-systems-design.github.io/particle-argon-wifi-board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/particle-argon-wifi-board/</guid>
      <description>&lt;h2 id=&#34;what-is-the-particle-argon-what-does-it-do&#34;&gt;What is the Particle Argon? What does it do?&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://docs.particle.io/argon/&#34;&gt;Particle Argon&lt;/a&gt; is a &amp;ldquo;wi-fi for everything&amp;rdquo; development kit that includes a microcontroller, wi-fi hardware, and easy-to-use web-based IDE (Integrated Development Environment). It is typically used to add wi-fi functionality into products without spending a huge amount of development time on the wi-fi hardware and software. A more detailed introduction is available &lt;a href=&#34;https://docs.particle.io/quickstart/argon/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software design</title>
      <link>https://embedded-systems-design.github.io/software-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/software-design/</guid>
      <description>&lt;h2 id=&#34;what-is-a-finite-state-machine&#34;&gt;What is a finite state machine?&lt;/h2&gt;&#xA;&lt;p&gt;A finite state machine (FSM) is a way of modeling a system such that there are a limited number of finite &amp;ldquo;states&amp;rdquo; that a system can be in, and that it can only be in one of those states at a time. Events (e.g., pushing a button) cause the system to change from one state to the next. Unexpected events do not cause the system to change states, which is useful for ignoring spurious inputs. Rather than coding for every possible input, you can instead code only for inputs that matter at the given time. The following resources provide a solid conceptual framing and implementation examples:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Soldering and Desoldering Tips and Tricks</title>
      <link>https://embedded-systems-design.github.io/soldering-and-desoldering-tips-and-tricks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/soldering-and-desoldering-tips-and-tricks/</guid>
      <description>&lt;h2 id=&#34;video-walkthrough&#34;&gt;Video Walkthrough&lt;/h2&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4kwuq9Yoj5c&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;how-do-i-turn-on-the-soldering-irons-in-prlta-103&#34;&gt;How do I turn on the soldering irons in PRLTA 103?&lt;/h2&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2WVQa1My0s4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;how-do-i-solder-through-hole-components-by-hand&#34;&gt;How do I solder through-hole components by hand?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/fYz5nIHH0iY&#34;&gt;Soldering through-hole components&lt;/a&gt; video from EEVblog&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://learn.sparkfun.com/tutorials/how-to-solder---through-hole-soldering&#34;&gt;How to solder - through hole soldering&lt;/a&gt; tutorial from sparkfun&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-do-i-solder-surface-mount-components-by-hand&#34;&gt;How do I solder surface mount components by hand?&lt;/h2&gt;&#xA;&lt;h4 id=&#34;capacitors-diodes-inductors-resistors&#34;&gt;Capacitors, diodes, inductors, resistors&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/PU7wLcuqc-I&#34;&gt;How to solder SMT 0805 components&lt;/a&gt; video from ItsInOurKernel&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3NN7UGWYmBY&#34;&gt;Surface Mount Soldering 101&lt;/a&gt; video from CuriousInventor&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;dpak-style-components-mosfets-voltage-regulators&#34;&gt;DPAK-style components (MOSFETs, voltage regulators)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/b9FC9fAlfQE?t=30m49s&#34;&gt;Soldering DPACK components&lt;/a&gt; video from EEVblog&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;integrated-circuits-ics&#34;&gt;Integrated circuits (ICs)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://youtu.be/b9FC9fAlfQE&#34;&gt;Soldering large ICs&lt;/a&gt; video from EEVblog&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3NN7UGWYmBY&#34;&gt;Surface Mount Soldering 101&lt;/a&gt;Â video from CuriousInventor&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=lhOKSqipwqg&#34;&gt;Soldering QFN and QFP package&lt;/a&gt; video from Nick Leijenhorst&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-do-i-solder-surface-mount-components-using-a-reflow-oven&#34;&gt;How do I solder surface mount components using a reflow oven?&lt;/h2&gt;&#xA;&lt;p&gt;This method involves applying solder paste to the pads on the PCB, manually placing your surface mount components into the solder paste, and baking the board in a special oven to solder the entire PCB at once. This method is not really easier than hand soldering for one-off PCBs; you are trading one set of challenges for a different set. If you are interested in using solder paste and the reflow oven to solder your components, please contact &lt;a href=&#34;mailto:osama.jameel@asu.edu&#34;&gt;Osama Jameel&lt;/a&gt; in PRLTA 109.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Surface Mount Soldering Tutorial</title>
      <link>https://embedded-systems-design.github.io/surface-mount-soldering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://embedded-systems-design.github.io/surface-mount-soldering/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/r6oD5bdy6EI&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;Special thanks to Travis Kelley&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
